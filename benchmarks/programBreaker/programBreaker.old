	.comm count,8,8
	.comm GLOBAL,8,8
	.section	.rodata
.PRINTSTRING:
	.string "%ld"
.PRINTLNSTRING:
	.string "%ld\n"
.READSTRING:
	.string "%ld"
	.text
.global fun2
	.type	fun2, @function
fun2:
	pushq %rbp
	movq %rsp, %rbp
	pushq %r15
	pushq %r12
	pushq %r13
	pushq %rbx
	subq $0, %rsp
	movq %rdi, %r13
	movq %rsi, %r12
L1:
	movq $0, %rsi
	cmpq %rsi, %r13
	movq $0, %r15
	movq $1, %rsi
	cmoveq %rsi, %r15
	cmpq $1, %r15
	je L2
	jmp L3
L2:
	movq %r12, %rax
	jmp L0
L0:
	addq $0, %rsp
	popq %rbx
	popq %r13
	popq %r12
	popq %r15
	movq %rbp, %rsp
	popq %rbp
	ret
L3:
	movq $1, %rsi
	movq %r13, %rbx
	subq %rsi, %rbx
	movq %rbx, %rdi
	movq %r12, %rsi
	call fun2
	movq %rax, %rsi
	movq %rsi, %rax
	jmp L0
	.size	fun2, .-fun2
	.text
.global fun1
	.type	fun1, @function
fun1:
	pushq %rbp
	movq %rsp, %rbp
	pushq %r15
	pushq %r14
	pushq %r12
	pushq %r13
	pushq %rbx
	subq $32, %rsp
	movq %rdi, %r14
	movq %rsi, %r12
	movq %rdx, %r13
	movq $5, %rdx
	movq $6, %rsi
	movq %rdx, %rdi
	addq %rsi, %rdi
	movq $2, %rsi
	movq %r14, %r15
	imulq %rsi, %r15
	movq %rdi, %rbx
	subq %r15, %rbx
	movq $4, %rsi
	movq %rsi, %rax
	movq %rsi, %rdx
	sarq $63, %rdx
	idivq %r12
	movq %rax, %r15
	movq 8(%rsp), %rsi
	movq %rbx, %rsi
	addq %r15, %rsi
	movq %rsi, 8(%rsp)
	movq 8(%rsp), %rsi
	movq 16(%rsp), %rdx
	movq %rsi, %rdx
	addq %r13, %rdx
	movq %rdx, 16(%rsp)
	movq 16(%rsp), %rdx
	movq %rdx, %r13
L6:
	cmpq %r12, %r13
	movq $0, %rsi
	movq $1, %rbx
	cmovgq %rbx, %rsi
	cmpq $1, %rsi
	je L7
	jmp L8
L7:
	movq %r13, %rdi
	movq %r14, %rsi
	call fun2
	movq %rax, %rsi
	movq %rsi, %rax
	jmp L5
L5:
	addq $32, %rsp
	popq %rbx
	popq %r13
	popq %r12
	popq %r14
	popq %r15
	movq %rbp, %rsp
	popq %rbp
	ret
L8:
L10:
	movq $5, %rsi
	movq $6, %rbx
	cmpq %rbx, %rsi
	movq $0, %r15
	movq $1, %rsi
	cmovlq %rsi, %r15
	cmpq %r12, %r13
	movq $0, %rbx
	movq $1, %rsi
	cmovleq %rsi, %rbx
	movq 0(%rsp), %rsi
	movq %r15, %rsi
	andq %rbx, %rsi
	movq %rsi, 0(%rsp)
	movq 0(%rsp), %rsi
	cmpq $1, %rsi
	je L11
	jmp L13
L11:
	movq %r13, %rdi
	movq %r12, %rsi
	call fun2
	movq %rax, %rsi
	movq %rsi, %rax
	jmp L5
L13:
	jmp L9
L9:
	movq %r13, %rax
	jmp L5
	.size	fun1, .-fun1
	.text
.global main
	.type	main, @function
main:
	pushq %rbp
	movq %rsp, %rbp
	pushq %r12
	pushq %r13
	pushq %rbx
	subq $8, %rsp
	movq $0, %rsi
	movq %rsi, %r12
	movq %rbp, %rsi
	addq $-8, %rsi
	movq $.READSTRING, %rdi
	movq %rsi, %rsi
	movq $0, %rax
	call scanf
	movq -8(%rbp), %r12
L15:
	movq $10000, %rsi
	cmpq %rsi, %r12
	movq $0, %rdx
	movq $1, %rsi
	cmovlq %rsi, %rdx
	cmpq $1, %rdx
	je L17
	jmp L16
L17:
	movq $3, %rsi
	movq $5, %rdx
	movq %rsi, %rdi
	movq %r12, %rsi
	movq %rdx, %rdx
	call fun1
	movq %rax, %rbx
	movq $.PRINTLNSTRING, %rdi
	movq %rbx, %rsi
	movq $0, %rax
	call printf
	movq $1, %rsi
	movq %r12, %r13
	addq %rsi, %r13
	movq %r13, %r12
	jmp L15
L16:
	movq $0, %rsi
	movq %rsi, %rax
	jmp L14
L14:
	addq $8, %rsp
	popq %rbx
	popq %r13
	popq %r12
	movq %rbp, %rsp
	popq %rbp
	ret
	.size	main, .-main
